version: 2.1

executors:
  cloudsdk_executor:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/workspace
  php_executor:
    docker:
      - image: php:8.0-apache-buster
      - image: node:18
    working_directory: ~/workspace

jobs:
  setup_job:
    executor: php_executor
    steps:
      - checkout
      - run:
          name: test
          command: |
            pwd
      - run:
          name: apt install
          command: |
            apt-get update
            apt-get install -y gettext
      - restore_cache:
          name: restore composer cache
          keys:
            - composer-cache-v1-{{ .Branch }}-{{ checksum "src/composer.json" }}
      - run:
          name: composer install
          command: |
            cd src
            composer --version
            composer config discard-changes true
            composer install -n --prefer-dist --no-dev
      - save_cache:
          name: save composer cache
          paths:
            - vendor
          key: composer-cache-v1-{{ .Branch }}-{{ checksum "src/composer.json" }}
      - restore_cache:
          name: restore npm cache
          keys:
            - npm-cache-v1-{{ .Branch }}-{{ checksum "src/package.json" }}
      - run:
          name: npm install
          command: |
            cd src
            npm install
            npm run prod
      - save_cache:
          name: save npm cache
          paths:
            - node_modules
          key: npm-cache-v1-{{ .Branch }}-{{ checksum "src/package.json" }}
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - ./*

  build_job:
    executor: cloudsdk_executor
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_remote_docker
      - run:
          name: change laravel directory permission
          command: |
            chmod 777 -R storage
            chmod 777 -R bootstrap/cache
      - run:
          name: set env
          command: |
            cd src
            envsubst < .env.prd > .env
      - run:
          name: gcloud auth
          command: |
            cd src
            echo ${GKE_SERVICE_ACCOUNT_KEY} > ${HOME}/allabout-kubernetes-service-account.json
            gcloud auth activate-service-account --key-file ${HOME}/allabout-kubernetes-service-account.json
            gcloud auth configure-docker us-east1-docker.pkg.dev
      - run:
          name: gcloud config
          command: |
            gcloud config set project o-taiji
            gcloud config set compute/region us-west1
            gcloud container clusters get-credentials ${CIRCLE_PROJECT_REPONAME}
      - run:
          name: build artifact and save artifact
          command: |
            cd src
            docker build \
              --build-arg APP_ENV=prd \
              --build-arg APP_PATH=/var/www/${CIRCLE_PROJECT_REPONAME} \
              -t us-east1-docker.pkg.dev/o-taiji/${CIRCLE_PROJECT_REPONAME}/app:${CIRCLE_SHA1} .
            docker tag ${CIRCLE_PROJECT_REPONAME} us-east1-docker.pkg.dev/o-taiji/${CIRCLE_PROJECT_REPONAME}/app:${CIRCLE_SHA1}
            docker push us-east1-docker.pkg.dev/o-taiji/${CIRCLE_PROJECT_REPONAME}/app:${CIRCLE_SHA1}
            docker tag ${CIRCLE_PROJECT_REPONAME} us-east1-docker.pkg.dev/o-taiji/${CIRCLE_PROJECT_REPONAME}/app:latest
            docker push us-east1-docker.pkg.dev/o-taiji/${CIRCLE_PROJECT_REPONAME}/app:latest
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - ./*

  deploy_job:
    executor: cloudsdk_executor
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: exec deploy
          command: |
            cd src/cd/${APP_ENV}/manifest
            envsubst < namespace.yaml > ${HOME}/namespace.yaml
            envsubst < service.yaml > ${HOME}/service.yaml
            envsubst < deployment.yaml > ${HOME}/deployment.yaml
            envsubst < ingress.yaml > ${HOME}/ingress.yaml
            envsubst < cert.yaml > ${HOME}/cert.yaml
            kubectl apply -f ${HOME}/namespace.yaml
            kubectl apply -f ${HOME}/service.yaml
            kubectl apply -f ${HOME}/deployment.yaml
            kubectl apply -f ${HOME}/ingress.yaml
            kubectl apply -f ${HOME}/cert.yaml
      - run:
          name: confirm deploy
          command: |
            kubectl rollout status deployment app
workflows:
  deploy_workflow:
    jobs:
      - setup_job
      - build_job:
          requires:
            - setup_job
      - deploy_job:
          requires:
            - build_job
          # filters:
          #   branches:
          #     only: main
